import sys
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job
from awsglue import DynamicFrame

def sparkSqlQuery(glueContext, query, mapping, transformation_ctx) -> DynamicFrame:
    for alias, frame in mapping.items():
        frame.toDF().createOrReplaceTempView(alias)
    result = spark.sql(query)
    return DynamicFrame.fromDF(result, glueContext, transformation_ctx)
args = getResolvedOptions(sys.argv, ['JOB_NAME'])
sc = SparkContext()
glueContext = GlueContext(sc)
spark = glueContext.spark_session
job = Job(glueContext)
job.init(args['JOB_NAME'], args)

# Script generated for node Amazon S3
AmazonS3_node1713251468625 = glueContext.create_dynamic_frame.from_options(format_options={"quoteChar": "\"", "withHeader": True, "separator": ",", "optimizePerformance": False}, connection_type="s3", format="csv", connection_options={"paths": ["s3://integrationframework/intermediate/databrewoutput/834_mom_ar/"], "recurse": True}, transformation_ctx="AmazonS3_node1713251468625")

# Script generated for node SQL Query
SqlQuery99 = '''
select * from myDataSource
'''
SQLQuery_node1713251629556 = sparkSqlQuery(glueContext, query = SqlQuery99, mapping = {"myDataSource":AmazonS3_node1713251468625}, transformation_ctx = "SQLQuery_node1713251629556")

# Script generated for node Change Schema
ChangeSchema_node1713252290905 = ApplyMapping.apply(frame=SQLQuery_node1713251629556, mappings=[("GoldenRecordId", "string", "GoldenRecordId", "string"), ("MemberID", "string", "MemberID", "long"), ("MedicaidID", "string", "MedicaidID", "string"), ("MedicareID", "string", "MedicareID", "string"), ("EligibilityType", "string", "EligibilityType", "string"), ("FileFrequency", "string", "FileFrequency", "string"), ("HcpLevel", "string", "HcpLevel", "string"), ("ServiceMonth", "string", "ServiceMonth", "date"), ("RptDate", "string", "RptDate", "date"), ("RptYearMo", "string", "RptYearMo", "long"), ("ServiceMonthEnddate", "string", "ServiceMonthEnddate", "date"), ("EdwSourceFileDate", "string", "EdwSourceFileDate", "date"), ("AsofDateFirstOfMonth", "string", "AsofDateFirstOfMonth", "date"), ("ParticipantNumber", "string", "ParticipantNumber", "string"), ("ParticipantFirstName", "string", "ParticipantFirstName", "string"), ("ParticipantLastName", "string", "ParticipantLastName", "string"), ("ParticipantMiddle", "string", "ParticipantMiddle", "string"), ("Gender", "string", "Gender", "string"), ("Dob", "string", "Dob", "date"), ("Race", "string", "Race", "string"), ("Language", "string", "Language", "string"), ("ResAddress1", "string", "ResAddress1", "string"), ("ResAddress2", "string", "ResAddress2", "string"), ("ResCity", "string", "ResCity", "string"), ("ResState", "string", "ResState", "string"), ("ResZip", "string", "ResZip", "long"), ("InsuranceMedicalelIgibilityStatus", "string", "InsuranceMedicalelIgibilityStatus", "string"), ("InsuranceIndividualRelationshipCode", "string", "InsuranceIndividualRelationshipCode", "string"), ("InsuranceMaintenanceTypeCode", "string", "InsuranceMaintenanceTypeCode", "string"), ("InsuranceBenefitStatusCode", "string", "InsuranceBenefitStatusCode", "string"), ("InsuranceDeathDate", "string", "InsuranceDeathDate", "string"), ("InsuranceCInCheckDigit", "string", "InsuranceCInCheckDigit", "long"), ("InsuranceFameCardIssueDate", "string", "InsuranceFameCardIssueDate", "date"), ("InsuranceFameCountyId", "string", "InsuranceFameCountyId", "long"), ("InsuranceAidCode", "string", "InsuranceAidCode", "string"), ("InsuranceCaseNumber", "string", "InsuranceCaseNumber", "string"), ("InsuranceResAddrFlag", "string", "InsuranceResAddrFlag", "string"), ("InsuranceReasAddInd", "string", "InsuranceReasAddInd", "string"), ("InsuranceResZipDelivCode", "string", "InsuranceResZipDelivCode", "long"), ("InsuranceCarrierCode", "string", "InsuranceCarrierCode", "string"), ("InsurancePolicyStart", "string", "InsurancePolicyStart", "string"), ("InsuranceHic", "string", "InsuranceHic", "string"), ("InsuranceHcpCode1", "string", "InsuranceHcpCode1", "string"), ("InsuranceHcpStatus1", "string", "InsuranceHcpStatus1", "string"), ("InsuranceHcpCode2", "string", "InsuranceHcpCode2", "string"), ("InsuranceHcpStatus2", "string", "InsuranceHcpStatus2", "string"), ("InsuranceHcpCode3", "string", "InsuranceHcpCode3", "string"), ("InsuranceHcpStatus3", "string", "InsuranceHcpStatus3", "string"), ("InsuranceHcpCode4", "string", "InsuranceHcpCode4", "string"), ("InsuranceHcpStatus4", "string", "InsuranceHcpStatus4", "string"), ("InsuranceHcpCode5", "string", "InsuranceHcpCode5", "string"), ("InsuranceHcpStatus5", "string", "InsuranceHcpStatus5", "string"), ("InsuranceHcpCode6", "string", "InsuranceHcpCode6", "string"), ("InsuranceHcpStatus6", "string", "InsuranceHcpStatus6", "string"), ("InsuranceHcpCode7", "string", "InsuranceHcpCode7", "string"), ("InsuranceHcpStatus7", "string", "InsuranceHcpStatus7", "string"), ("InsuranceHcpCode8", "string", "InsuranceHcpCode8", "string"), ("InsuranceHcpStatus8", "string", "InsuranceHcpStatus8", "string"), ("InsuranceHcpCode9", "string", "InsuranceHcpCode9", "string"), ("InsuranceHcpStatus9", "string", "InsuranceHcpStatus9", "string"), ("InsuranceHcpCode10", "string", "InsuranceHcpCode10", "string"), ("InsuranceHcpStatus10", "string", "InsuranceHcpStatus10", "string"), ("InsuranceFamereDeterminationDate", "string", "InsuranceFamereDeterminationDate", "string"), ("InsuranceFamePaperCardDate", "string", "InsuranceFamePaperCardDate", "string"), ("InsuranceCaseName", "string", "InsuranceCaseName", "string"), ("InsuranceCodistrictCode", "string", "InsuranceCodistrictCode", "string"), ("InsuranceCcsghppind", "string", "InsuranceCcsghppind", "string"), ("InsuranceMailAddressFlag", "string", "InsuranceMailAddressFlag", "string"), ("InsuranceMail", "string", "InsuranceMail", "string"), ("InsuranceFamepriormedsid", "string", "InsuranceFamepriormedsid", "string"), ("InsuranceFamechainedmedsid", "string", "InsuranceFamechainedmedsid", "string"), ("InsuranceFedContractNumber", "string", "InsuranceFedContractNumber", "string"), ("InsuranceOtherTermReason", "string", "InsuranceOtherTermReason", "string"), ("InsuranceOtherTermDate", "string", "InsuranceOtherTermDate", "string"), ("EdwFilename", "string", "EdwFilename", "string"), ("MaintenanceTypeCode", "string", "MaintenanceTypeCode", "long"), ("InsuranceLineCode", "string", "InsuranceLineCode", "string"), ("HcpCode", "string", "HcpCode", "long"), ("HcpStatus", "string", "HcpStatus", "string"), ("HcpStatusDescr", "string", "HcpStatusDescr", "string"), ("ClientReportingCat", "string", "ClientReportingCat", "string"), ("ImmigrationStatus", "string", "ImmigrationStatus", "string"), ("PaymentMedicarePrtA", "string", "PaymentMedicarePrtA", "string"), ("PaymentMedicarePrtB", "string", "PaymentMedicarePrtB", "string"), ("PaymentMedicarePrtD", "string", "PaymentMedicarePrtD", "string"), ("PrimaryAidCode", "string", "PrimaryAidCode", "string"), ("Cocesc", "string", "Cocesc", "string"), ("Spec1Aid", "string", "Spec1Aid", "string"), ("Spec1esc", "string", "Spec1esc", "string"), ("Spec2aid", "string", "Spec2aid", "string"), ("Spec2esc", "string", "Spec2esc", "string"), ("Spec3aid", "string", "Spec3aid", "string"), ("Spec3esc", "string", "Spec3esc", "string"), ("Capaid", "string", "Capaid", "string"), ("CountyCode", "string", "CountyCode", "string"), ("Certday", "string", "Certday", "string"), ("Amount", "string", "Amount", "string"), ("AR_Bal", "string", "AR_Bal", "string"), ("Pacelocation", "string", "Pacelocation", "string")], transformation_ctx="ChangeSchema_node1713252290905")

# Script generated for node Amazon Redshift
AmazonRedshift_node1714048069594 = glueContext.write_dynamic_frame.from_options(frame=ChangeSchema_node1713252290905, connection_type="redshift", connection_options={"redshiftTmpDir": "s3://aws-glue-assets-119391704005-ap-south-1/temporary/", "useConnectionProperties": "true", "dbtable": "public.mom_ar_bal_834", "connectionName": "Redshift connection", "preactions": "CREATE TABLE IF NOT EXISTS public.mom_ar_bal_834 (GoldenRecordId VARCHAR, MemberID BIGINT, MedicaidID VARCHAR, MedicareID VARCHAR, EligibilityType VARCHAR, FileFrequency VARCHAR, HcpLevel VARCHAR, ServiceMonth DATE, RptDate DATE, RptYearMo BIGINT, ServiceMonthEnddate DATE, EdwSourceFileDate DATE, AsofDateFirstOfMonth DATE, ParticipantNumber VARCHAR, ParticipantFirstName VARCHAR, ParticipantLastName VARCHAR, ParticipantMiddle VARCHAR, Gender VARCHAR, Dob DATE, Race VARCHAR, Language VARCHAR, ResAddress1 VARCHAR, ResAddress2 VARCHAR, ResCity VARCHAR, ResState VARCHAR, ResZip BIGINT, InsuranceMedicalelIgibilityStatus VARCHAR, InsuranceIndividualRelationshipCode VARCHAR, InsuranceMaintenanceTypeCode VARCHAR, InsuranceBenefitStatusCode VARCHAR, InsuranceDeathDate VARCHAR, InsuranceCInCheckDigit BIGINT, InsuranceFameCardIssueDate DATE, InsuranceFameCountyId BIGINT, InsuranceAidCode VARCHAR, InsuranceCaseNumber VARCHAR, InsuranceResAddrFlag VARCHAR, InsuranceReasAddInd VARCHAR, InsuranceResZipDelivCode BIGINT, InsuranceCarrierCode VARCHAR, InsurancePolicyStart VARCHAR, InsuranceHic VARCHAR, InsuranceHcpCode1 VARCHAR, InsuranceHcpStatus1 VARCHAR, InsuranceHcpCode2 VARCHAR, InsuranceHcpStatus2 VARCHAR, InsuranceHcpCode3 VARCHAR, InsuranceHcpStatus3 VARCHAR, InsuranceHcpCode4 VARCHAR, InsuranceHcpStatus4 VARCHAR, InsuranceHcpCode5 VARCHAR, InsuranceHcpStatus5 VARCHAR, InsuranceHcpCode6 VARCHAR, InsuranceHcpStatus6 VARCHAR, InsuranceHcpCode7 VARCHAR, InsuranceHcpStatus7 VARCHAR, InsuranceHcpCode8 VARCHAR, InsuranceHcpStatus8 VARCHAR, InsuranceHcpCode9 VARCHAR, InsuranceHcpStatus9 VARCHAR, InsuranceHcpCode10 VARCHAR, InsuranceHcpStatus10 VARCHAR, InsuranceFamereDeterminationDate VARCHAR, InsuranceFamePaperCardDate VARCHAR, InsuranceCaseName VARCHAR, InsuranceCodistrictCode VARCHAR, InsuranceCcsghppind VARCHAR, InsuranceMailAddressFlag VARCHAR, InsuranceMail VARCHAR, InsuranceFamepriormedsid VARCHAR, InsuranceFamechainedmedsid VARCHAR, InsuranceFedContractNumber VARCHAR, InsuranceOtherTermReason VARCHAR, InsuranceOtherTermDate VARCHAR, EdwFilename VARCHAR, MaintenanceTypeCode BIGINT, InsuranceLineCode VARCHAR, HcpCode BIGINT, HcpStatus VARCHAR, HcpStatusDescr VARCHAR, ClientReportingCat VARCHAR, ImmigrationStatus VARCHAR, PaymentMedicarePrtA VARCHAR, PaymentMedicarePrtB VARCHAR, PaymentMedicarePrtD VARCHAR, PrimaryAidCode VARCHAR, Cocesc VARCHAR, Spec1Aid VARCHAR, Spec1esc VARCHAR, Spec2aid VARCHAR, Spec2esc VARCHAR, Spec3aid VARCHAR, Spec3esc VARCHAR, Capaid VARCHAR, CountyCode VARCHAR, Certday VARCHAR, Amount VARCHAR, AR_Bal VARCHAR, Pacelocation VARCHAR);"}, transformation_ctx="AmazonRedshift_node1714048069594")

# Script generated for node PostgreSQL
PostgreSQL_node1713251484566 = glueContext.write_dynamic_frame.from_catalog(frame=ChangeSchema_node1713252290905, database="postgrescatalogdb", table_name="postgres_analytics_834_mom_ar_bal", transformation_ctx="PostgreSQL_node1713251484566")

job.commit()